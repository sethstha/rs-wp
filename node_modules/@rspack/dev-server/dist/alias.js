"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.removeResolveAlias = exports.addResolveAlias = void 0;
const Module = require("node:module");
const MODULE_MAP = {};
const RESOLVER_MAP = {};
const addResolveAlias = (name, aliasMap) => {
    const modulePath = require.resolve(name);
    if (modulePath in RESOLVER_MAP) {
        throw new Error(`Should not add resolve alias to ${name} again.`);
    }
    const m = require.cache[modulePath];
    if (!m) {
        throw new Error("Failed to resolve webpack-dev-server.");
    }
    RESOLVER_MAP[modulePath] = m.require.resolve;
    // biome-ignore lint/suspicious/noExplicitAny: <explanation>
    m.require.resolve = ((id, options) => aliasMap[id] ||
        RESOLVER_MAP[modulePath].apply(m.require, [
            id,
            options,
        ]));
    MODULE_MAP[modulePath] = Module._resolveFilename;
    Module._resolveFilename = (request, mod, ...args) => {
        if (mod.filename === modulePath && aliasMap[request]) {
            return aliasMap[request];
        }
        return MODULE_MAP[modulePath](request, mod, ...args);
    };
};
exports.addResolveAlias = addResolveAlias;
const removeResolveAlias = (name) => {
    const modulePath = require.resolve(name);
    if (!(modulePath in RESOLVER_MAP)) {
        return;
    }
    const m = require.cache[modulePath];
    if (!m) {
        throw new Error("Failed to resolve webpack-dev-server");
    }
    Module._resolveFilename = MODULE_MAP[modulePath];
    m.require.resolve = RESOLVER_MAP[modulePath];
    delete RESOLVER_MAP[modulePath];
};
exports.removeResolveAlias = removeResolveAlias;
